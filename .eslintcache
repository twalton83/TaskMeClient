[{"/Users/Tatiana/Desktop/CODE/taskmeclient/src/reportWebVitals.js":"1","/Users/Tatiana/Desktop/CODE/taskmeclient/src/App.js":"2","/Users/Tatiana/Desktop/CODE/taskmeclient/src/index.js":"3","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/HomeView.js":"4","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/ProjectsList.js":"5","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/TaskView.js":"6","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/ProjectCard.js":"7","/Users/Tatiana/Desktop/CODE/taskmeclient/src/modules/User.js":"8","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/ProjectModal.js":"9","/Users/Tatiana/Desktop/CODE/taskmeclient/src/modules/Project.js":"10","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/AppStyle.js":"11","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/ProjectListStyle.js":"12","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/ProjectCardStyle.js":"13","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/ProjectModalStyle.js":"14","/Users/Tatiana/Desktop/CODE/taskmeclient/src/modules/Task.js":"15","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/TaskModal.js":"16","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskModalStyle.js":"17","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/TaskListItem.js":"18","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/TaskViewSection.js":"19","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskViewSectionStyle.js":"20","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskListItemStyle.js":"21","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/TaskDetailsModal.js":"22","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskDetailsModalStyle.js":"23","/Users/Tatiana/Desktop/CODE/taskmeclient/src/modules/helpers.js":"24","/Users/Tatiana/Desktop/CODE/taskmeclient/src/modules/seeds.js":"25","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskViewStyle.js":"26","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskSectionItemStyle.js":"27","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/HomeViewStyle.js":"28"},{"size":356,"mtime":1607230939189,"results":"29","hashOfConfig":"30"},{"size":4874,"mtime":1610864457927,"results":"31","hashOfConfig":"30"},{"size":536,"mtime":1607230919246,"results":"32","hashOfConfig":"30"},{"size":2656,"mtime":1610864457928,"results":"33","hashOfConfig":"30"},{"size":1922,"mtime":1610864457929,"results":"34","hashOfConfig":"30"},{"size":2125,"mtime":1610864457931,"results":"35","hashOfConfig":"30"},{"size":1211,"mtime":1610864457928,"results":"36","hashOfConfig":"30"},{"size":90,"mtime":1610864457936,"results":"37","hashOfConfig":"30"},{"size":2017,"mtime":1610864457929,"results":"38","hashOfConfig":"30"},{"size":520,"mtime":1610864457935,"results":"39","hashOfConfig":"30"},{"size":2003,"mtime":1610769170446,"results":"40","hashOfConfig":"30"},{"size":365,"mtime":1610864457932,"results":"41","hashOfConfig":"30"},{"size":283,"mtime":1607895408935,"results":"42","hashOfConfig":"30"},{"size":368,"mtime":1610864457932,"results":"43","hashOfConfig":"30"},{"size":358,"mtime":1610864457935,"results":"44","hashOfConfig":"30"},{"size":3517,"mtime":1610865941125,"results":"45","hashOfConfig":"30"},{"size":489,"mtime":1610864457933,"results":"46","hashOfConfig":"30"},{"size":1548,"mtime":1610866041121,"results":"47","hashOfConfig":"30"},{"size":621,"mtime":1610769332336,"results":"48","hashOfConfig":"30"},{"size":234,"mtime":1610584016474,"results":"49","hashOfConfig":"30"},{"size":253,"mtime":1610865725682,"results":"50","hashOfConfig":"30"},{"size":3139,"mtime":1610769332335,"results":"51","hashOfConfig":"30"},{"size":489,"mtime":1610864457933,"results":"52","hashOfConfig":"30"},{"size":408,"mtime":1610865666714,"results":"53","hashOfConfig":"30"},{"size":436,"mtime":1610864457937,"results":"54","hashOfConfig":"30"},{"size":173,"mtime":1610864457934,"results":"55","hashOfConfig":"30"},{"size":217,"mtime":1610864457934,"results":"56","hashOfConfig":"30"},{"size":319,"mtime":1610864457931,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1cj7td0",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":2,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":2,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/Tatiana/Desktop/CODE/taskmeclient/src/reportWebVitals.js",[],["120","121","122","123","124","125"],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/App.js",["126"],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/index.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/HomeView.js",["127"],"import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport ProjectCard from './ProjectCard';\nimport TaskViewSection from './TaskViewSection'; \n\nexport default function HomeView({ user, setUser }) {\n  return (\n    <Grid container>\n      <Grid item xs={ 12 }>\n        <Typography variant=\"h2\" component=\"h1\">\n          Welcome to Task.Me\n        </Typography>\n        <Typography paragraph>\n          Here you can find your upcoming tasks and pin your most important projects!\n        </Typography>\n        <Typography variant=\"h3\">\n          Upcoming Tasks\n        </Typography>\n        <Grid item xs= { 12 } sm = { 10 } md = { 8 }>\n          {user.projects.map(project => (\n            <TaskViewSection user = { user } setUser = { setUser } tasks = { project.tasks } project = { project } />\n          ))}\n        </Grid>\n\n        <Typography variant=\"h3\">\n          Projects\n        </Typography>\n          \n        <Grid container spacing = { 3 }>\n          {user.projects.map(project => (\n            <Grid key={ project.id } item xs={ 12 } sm={ 6 } md={ 4 } >\n              <ProjectCard project={ project } />\n            </Grid>\n          ))}\n        </Grid>\n\n      </Grid>\n    </Grid>\n  )\n}\n\n","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/ProjectsList.js",["128"],"/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport ProjectModal from './ProjectModal';\nimport ProjectCard from './ProjectCard';\nimport useStyles from './styles/ProjectListStyle';\n\nfunction ProjectsList({ projects, setUser }) {\n  const classes = useStyles()\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true)\n  }\n  const handleClose = () => {\n    setOpen(false)\n  }\n  return (\n    <Grid container spacing={ 3 }>\n      <Grid container>\n        <Grid item xs={ 10 }>\n          <Typography xs={ 10 } variant=\"h2\" component=\"h1\">\n            Projects\n            </Typography>\n        </Grid>\n        <Grid item xs={ 12 } md={ 2 } className={ classes.buttonContainer }>\n          {projects.length > 0 &&\n            <Button className={ classes.addProjectButton }\n              variant=\"contained\"\n              onClick={ handleOpen }\n            >\n              Add A Project\n              </Button>\n          }\n        </Grid>\n      </Grid>\n      { projects.length > 0 && projects.map((project) => (\n\n        <Grid key={ project.id } item xs={ 12 } sm={ 6 } md={ 4 } >\n          <ProjectCard project={ project } />\n        </Grid>\n      ))}\n      { projects.length === 0 &&\n        <Grid>\n          <Typography variant=\"h5\"> You do not have any projects yet!</Typography>\n          <Button className={ classes.addProjectButton }\n            variant=\"contained\"\n            onClick={ handleOpen }\n          >\n            Add A Project\n          </Button>\n        </Grid>\n      }\n      <ProjectModal setUser={ setUser } handleClose={ handleClose } open={ open } />\n    </Grid>\n  )\n}\n\nexport default ProjectsList\n","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/TaskView.js",["129","130","131","132"],"import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TaskViewSection from './TaskViewSection';\nimport { findProject } from '../modules/helpers';\nimport useStyles from './styles/TaskViewStyle';\n\nexport default function TaskView({ user, setUser, project }) {\n  const classes = useStyles()\n  const completeTask = (taskId) => {\n    const projectToUpdate = findProject(user, project.id)\n    console.log(projectToUpdate)\n    projectToUpdate.completeTask(taskId)\n    console.log(projectToUpdate)\n    const prevProjects = user.projects.filter(proj => proj !== project)\n    setUser({ ...user, projects: [... prevProjects, projectToUpdate] })\n  }\n  const incompleteTasks = project.tasks.filter(task => !task.completed)\n  const completedTasks = project.tasks.filter(task => task.completed)\n  \n  return (\n    <Grid container alignItems=\"center\" justify=\"center\">\n      <Grid item xs = { 10 }>\n        <Typography variant=\"h2\" component =\"h1\" align=\"center\">{ project.name }</Typography>\n      </Grid>\n      <Grid item xs = { 12 } md = { 8 } className= { classes.incompletedTasks }>\n        <TaskViewSection completeTask = { completeTask } tasks = { incompleteTasks } project = { project } />\n      </Grid>\n\n      {\n       completedTasks.length > 0 &&\n      <Grid item xs = { 10 }>\n        \n        <Accordion>\n          <AccordionSummary\n           expandIcon={<ExpandMoreIcon />}\n           aria-controls=\"panel1a-content\"\n           id=\"panel1a-header\">\n            <Typography variant=\"h6\" align=\"center\"> Completed Tasks </Typography>\n          </AccordionSummary>\n       \n          <AccordionDetails>\n            <TaskViewSection completeTask = { completeTask } tasks = { completedTasks } project = { project } /> \n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n       }\n    </Grid>\n  )\n}\n","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/ProjectCard.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/modules/User.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/ProjectModal.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/modules/Project.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/AppStyle.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/ProjectListStyle.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/ProjectCardStyle.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/ProjectModalStyle.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/modules/Task.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/TaskModal.js",["133"],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskModalStyle.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/TaskListItem.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/TaskViewSection.js",["134"],"import React from 'react'\nimport Paper from '@material-ui/core/Paper';\n// import Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport useStyles from './styles/TaskViewSectionStyle';\nimport TaskListItem from './TaskListItem';\n\nexport default function TaskViewSection({ tasks, completeTask}) {\n  const classes = useStyles()\n  return (\n    <Paper elevation= { 3 }>\n      <List className={ classes.root } >\n        { tasks.map(task => (         \n            <TaskListItem completeTask = { completeTask }  key = { task.id } task = { task }/>\n        ))}\n      </List>\n    </Paper>\n  )\n}\n","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskViewSectionStyle.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskListItemStyle.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/TaskDetailsModal.js",["135","136","137","138","139","140","141","142"],"import React, { useState } from 'react'\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from '@material-ui/pickers';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DateFnsUtils from '@date-io/date-fns';\nimport useStyles from './styles/TaskDetailsModalStyle';\nimport { findTask } from '../modules/helpers';\n\nfunction TaskDetailsModal({ open, handleClose, task }) {\n  const classes = useStyles()\n  const [taskName, setTaskName] = useState(task.name);\n  const [priority, setPriority] = useState(task.priority);\n  const [dueDate, setDueDate] = useState(task.dueDate);\n  const [section, setSection] = useState(task.section);\n  const [taskDescription, setTaskDescription] = useState(\"\");\n  const editTask = (e) => {\n    e.preventDefault()\n    handleClose()\n  }\n\n  const handleTaskNameChange = (e) => {\n    setTaskName(e.target.value)\n  }\n  const handleTaskDescChange = (e) => {\n    setTaskDescription(e.target.value)\n  }\n\n  const handleSelect = (e) => {\n    e.preventDefault()\n  }\n\n  const handlePrioritySelect = (e) => {\n    setPriority(e.target.value)\n  }\n\n\n  return (\n    <Dialog\n      open={ open }\n      onClose={ handleClose }\n      aria-labelledby=\"edit-task\"\n      aria-describedby=\"Edit a task modal\"\n    >\n      <DialogTitle className={ classes.header }>\n        Task Details\n    </DialogTitle>\n      <DialogContent  className={ classes.root } >\n        <form className={ classes.form } onSubmit={ editTask }>\n          <TextField label=\"Task\" name=\"TaskName\" type=\"text\" onChange={ handleTaskNameChange } value={ taskName } />\n          <TextField label=\"Description\" name=\"TaskDesc\" onChange={ handleTaskDescChange } value={ taskDescription }multiline\n          rows={4} variant=\"filled\"/>\n          <InputLabel id=\"priority\">Priority</InputLabel>\n          <Select value={ priority } id=\"priority\" onChange={ handlePrioritySelect }>\n            <MenuItem value=\"Low\">Low</MenuItem>\n            <MenuItem value=\"Medium\">Medium</MenuItem>\n            <MenuItem value=\"High\">High</MenuItem>\n          </Select>\n          <MuiPickersUtilsProvider utils={ DateFnsUtils }>\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"inline\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"Due-Date\"\n              label=\"Due Date\"\n              KeyboardButtonProps={ {\n                'aria-label': 'change date',\n              } }\n              onChange={ setDueDate }\n            />\n          </MuiPickersUtilsProvider>\n          <Button type=\"submit\"\n              className={ classes.submitButton }>\n              Submit\n          </Button>\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default TaskDetailsModal\n","/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskDetailsModalStyle.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/modules/helpers.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/modules/seeds.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskViewStyle.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/TaskSectionItemStyle.js",[],"/Users/Tatiana/Desktop/CODE/taskmeclient/src/components/styles/HomeViewStyle.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","severity":1,"message":"156","line":3,"column":10,"nodeType":"157","messageId":"158","endLine":3,"endColumn":20},{"ruleId":"159","severity":1,"message":"160","line":49,"column":52,"nodeType":"161","fix":"162"},{"ruleId":"155","severity":1,"message":"163","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":14},{"ruleId":"164","severity":1,"message":"165","line":16,"column":5,"nodeType":"166","messageId":"167","endLine":16,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":18,"column":5,"nodeType":"166","messageId":"167","endLine":18,"endColumn":16},{"ruleId":"159","severity":1,"message":"160","line":40,"column":23,"nodeType":"161","fix":"168"},{"ruleId":"159","severity":1,"message":"169","line":40,"column":42,"nodeType":"161","fix":"170"},{"ruleId":"155","severity":1,"message":"171","line":25,"column":19,"nodeType":"157","messageId":"158","endLine":25,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":8,"column":62,"nodeType":"174","messageId":"175","endLine":8,"endColumn":63,"fix":"176"},{"ruleId":"155","severity":1,"message":"177","line":6,"column":8,"nodeType":"157","messageId":"158","endLine":6,"endColumn":18},{"ruleId":"155","severity":1,"message":"178","line":17,"column":10,"nodeType":"157","messageId":"158","endLine":17,"endColumn":18},{"ruleId":"155","severity":1,"message":"179","line":23,"column":10,"nodeType":"157","messageId":"158","endLine":23,"endColumn":17},{"ruleId":"155","severity":1,"message":"180","line":24,"column":10,"nodeType":"157","messageId":"158","endLine":24,"endColumn":17},{"ruleId":"155","severity":1,"message":"171","line":24,"column":19,"nodeType":"157","messageId":"158","endLine":24,"endColumn":29},{"ruleId":"155","severity":1,"message":"181","line":38,"column":9,"nodeType":"157","messageId":"158","endLine":38,"endColumn":21},{"ruleId":"159","severity":1,"message":"160","line":61,"column":16,"nodeType":"161","fix":"182"},{"ruleId":"159","severity":1,"message":"169","line":61,"column":18,"nodeType":"161","fix":"183"},"jsx-a11y/accessible-emoji",[],"lines-around-directive",["184"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'Transition' is defined but never used.","Identifier","unusedVar","react/jsx-curly-spacing","A space is required after '{'","JSXExpressionContainer",{"range":"185","text":"186"},"'Link' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected",{"range":"187","text":"186"},"A space is required before '}'",{"range":"188","text":"186"},"'setSection' is assigned a value but never used.","object-curly-spacing","A space is required before '}'.","ObjectPattern","requireSpaceBefore",{"range":"189","text":"186"},"'Typography' is defined but never used.","'findTask' is defined but never used.","'dueDate' is assigned a value but never used.","'section' is assigned a value but never used.","'handleSelect' is assigned a value but never used.",{"range":"190","text":"186"},{"range":"191","text":"186"},"padding-line-between-statements",[1843,1843]," ",[1674,1674],[1692,1692],[326,326],[2118,2118],[2119,2119]]